spring:
  application:
    name: ai-aggregator

  profiles:
    active: dev
#    active: prod

  datasource:
    url: jdbc:mysql://${MYSQL_HOSTNAME}:${MYSQL_PORT}/${MYSQL_DATABASE}?createDatabaseIfNotExist=true
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
#      ddl-auto: none
      ddl-auto: update
#      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
    defer-datasource-initialization: true
  sql:
    init:
      mode: always
      data-locations: "classpath:data-mysql.sql"


  ai:
    anthropic:
      api-key: ${SPRING_AI_ANTHROPIC_API_KEY}

    azure:
      openai:
        api-key: ${SPRING_AI_AZURE_OPENAI_API_KEY}
        endpoint: ${SPRING_AI_AZURE_OPENAI_ENDPOINT}
    #        image:
    #          options:
    #            deployment-name:

    mistralai:
      api-key: ${SPRING_AI_MISTRALAI_API_KEY}

    openai:
      api-key: ${SPRING_AI_OPENAI_API_KEY}
      chat:
        api-key: ${SPRING_AI_OPENAI_API_KEY}

    stabilityai:
      api-key: ${SPRING_AI_STABILITYAI_API_KEY}

    vertex:
      ai:
        gemini:
          projectId: ${SPRING_AI_VERTEX_GEMINI_PROJECT_ID}
          location: ${SPRING_AI_VERTEX_GEMINI_LOCATION}



#  security:
#    user:
#      name:
#      password:

---
spring:
  config:
    activate:
      on-profile: dev

server:
  port: 8080


---
spring:
  config:
    activate:
      on-profile: prod

server:
  port: 5000 # AWS
